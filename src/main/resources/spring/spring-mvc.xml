<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--设置Controller控制器的扫描地址-->
    <context:component-scan base-package="com.wishuok.controller, com.wishuok.config" />

    <!-- 配置springmvc返回数据的数据格式，注意必须放在<mvc:annotation-driven>之前 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <!--
                            <value>text/plain;charset=UTF-8</value>
                            <value>text/html;charset=UTF-8</value> -->
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!--注解驱动，很多配置都需要它(比如上传下载，类型转换器...)，一般都会添加该配置-->
    <mvc:annotation-driven />
    <!--向容器自动注入配置 -->
    <context:annotation-config/>
    <!--注解驱动，启用Async，等同于代码使用 @EnableAsync -->
    <task:annotation-driven />
    <!--
       静态资源映射，应为WEB-INF是一个安全目录，不能使用get访问，而外部的js，css都是属性get访问，所有需要映射，不然无法读取
       location:本地真实路径  mapping：映射搭配的虚拟路径
    -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <!--配置 Swagger-ui 资源 -->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <!--将 SwaggerConfig 配置类注入 -->
    <bean class="com.wishuok.config.SwaggerConfig"/>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有mvc控制器 -->
            <mvc:mapping path="/**"/>
            <!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在 LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
            <mvc:exclude-mapping path="/login" />
            <mvc:exclude-mapping path="/login/**" />
            <mvc:exclude-mapping path="/resources/**" />
            <bean class="com.wishuok.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>